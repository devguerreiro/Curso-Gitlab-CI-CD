image: node

stages:
  - test
  - build
  - deploy

test site:
  stage: test
  before_script:
    - npm install -g broken-link-checker wait-on
  script:
    - cd website && npm install && npm run start &
    - wait-on http://localhost:3000/ --httpTimeout 30000 && blc --recursive --exclude-external http://localhost:3000

vulnerabilities check:
  stage: test
  script:
    - cd website && npm install && npm run scan

build site:
  stage: build
  cache:
    key: build-site
    policy: push
    paths:
      - ./website/build/
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    when: always
    expire_in: 2h
    paths:
      - ./website/build/test-site
  script:
    - cd website && npm install && npm run build

deploy to develop: &deploy
  stage: deploy
  variables:
    CNAME: develop-corujam-cicd.surge.sh
    GIT_STRATEGY: none
  cache:
    key: build-site
    policy: pull
  before_script:
    - npm install -g surge
  script:
    - surge -p website/build/test-site -d ${CNAME}
  environment:
    name: develop
    url: http://${CNAME}
  only:
    - develop

deploy to release: &deploy-release
  <<: *deploy
  variables:
    CNAME: $CI_COMMIT_REF_SLUG-corujam-cicd.surge.sh
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    on_stop: turnoff
  only:
    - /^release-.*$/

turnoff:
  <<: *deploy-release
  script:
    - surge teardown ${CNAME}
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop

deploy to production:
  <<: *deploy
  variables:
    CNAME: corujam-cicd.surge.sh
  environment:
    name: production
  only:
    - master
